import profesionales.*

describe "Test etapa 1 " {
  
    var uniSanMartin = new Universidad(nombre = "uni San Martin", honorarios = 3500, provincia = "Buenos Aires")
    var uniRosario = new Universidad(nombre = "uni Rosario", honorarios = 2800, provincia = "Santa Fe")
    var uniCorrientes = new Universidad(nombre = "uni Corrientes", honorarios = 4200, provincia = "Corrientes")
    var uniHurlingham = new Universidad(nombre = "uni Hurlingham", honorarios = 8800, provincia = "Buenos Aires")
    
    var juana = new ProfesionalVinculado(nombre = "Juana", universidad = uniRosario)
    var melina = new ProfesionalAsociado(nombre = "Melina", universidad = uniCorrientes)  
    var rocio = new ProfesionalLibre(nombre = "Rocio", universidad = uniHurlingham, honorarios = 5000, provincias = #{'Buenos Aires', 'Santa Fe', 'Cordoba'})
    var luciana = new ProfesionalLibre(nombre = "Luciana", universidad = uniRosario, honorarios = 3200, provincias = #{'Entre Ríos', 'Santa Fe'})

    var empresaFORD = new Empresa(honorarios = 3500)

  method initialize() {
    empresaFORD.contratar(juana)
    empresaFORD.contratar(melina)
    empresaFORD.contratar(rocio)
    empresaFORD.contratar(luciana)
  }
  test "dos de sus profesionales estudiaron en Rosario" {
    assert.equals(empresaFORD.cuantosEstudiaronEn(uniRosario), 2)
  }
   test "uno de sus profesionales estudiaron en hurlingham" {
    assert.equals(empresaFORD.cuantosEstudiaronEn(uniHurlingham), 1)
  }
  test "ninguno de sus profesionales estudiaron en san martin" {
    assert.equals(empresaFORD.cuantosEstudiaronEn(uniSanMartin), 0)
  }
  test "como profesionales caros, solamente a Rocío" {
    assert.equals(empresaFORD.conjuntoCaros(), #{rocio.nombre()})
  }
  test "como universidades formadoras, a las de Rosario, Corrientes y Hurlingham."{
    assert.equals(empresaFORD.uniFormadoras(), #{uniRosario, uniCorrientes, uniHurlingham})
  }
  test "como profesional más barato a Juana." {
    assert.equals(empresaFORD.profesionalBarato(), #{juana.nombre()})
  }
}